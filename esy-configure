#! /bin/bash

# esy-configure
#
# Wrapper to delegate to configuration to the 
# appropriate `configure` strategy based on the active platform.
#
# Today, OCaml has separate build strategies:
# - Linux, OSX, Cygwin (gcc) - https://github.com/ocaml/ocaml/blob/trunk/INSTALL.adoc
# - Windows, Cygin (mingw) - https://github.com/ocaml/ocaml/blob/trunk/README.win32.adoc
#
# We want `esy` to work cross-platform, so this is a shim script that will delegate to the
# appropriate script depending on the platform. We assume that if the platform is `CYGWIN`
# that the `mingw` (native executable) strategy is desired.

set -u
set -e
set -o pipefail
export HOME="/home/esy-user"
export CC="clang --target=x86_64-none-linux-android21 --gcc-toolchain=$HOME/ndk --sysroot=$HOME/ndk/sysroot $HOME/ocaml/android-libc/sys_shm.o"
export PATH="$HOME/ndk/bin:$HOME/ndk/x86_64-linux-android/bin:$PATH"

case "$(uname -s)" in
    CYGWIN*|MINGW32*|MSYS*)
        echo "[esy-configure] Detected windows environment..."
        ./configure-windows "$@"
        ;;
    *)
        echo "[esy-configure] Detected OSX / Linux environment"
        ./configure -cc "$CC" -aspp "$CC -c" "$@"
        ;;
esac
